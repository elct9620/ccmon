name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: go

  build-and-push:
    needs: release-please
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'dist/**/*'

      - name: Update Homebrew formula
        if: ${{ needs.release-please.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ needs.release-please.outputs.tag_name }}
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${TAG_NAME#v}
          
          # Get SHA256 hashes from checksums.txt
          DARWIN_AMD64_SHA=$(grep "ccmon_Darwin_x86_64.tar.gz" dist/checksums.txt | cut -d' ' -f1)
          DARWIN_ARM64_SHA=$(grep "ccmon_Darwin_arm64.tar.gz" dist/checksums.txt | cut -d' ' -f1)
          LINUX_AMD64_SHA=$(grep "ccmon_Linux_x86_64.tar.gz" dist/checksums.txt | cut -d' ' -f1)
          LINUX_ARM64_SHA=$(grep "ccmon_Linux_arm64.tar.gz" dist/checksums.txt | cut -d' ' -f1)
          
          # Update formula with new version and SHA256 hashes
          sed -i.bak \
            -e "s/version \".*\"/version \"$VERSION\"/" \
            -e "s/PLACEHOLDER_INTEL_SHA256/$DARWIN_AMD64_SHA/" \
            -e "s/PLACEHOLDER_ARM_SHA256/$DARWIN_ARM64_SHA/" \
            -e "s/PLACEHOLDER_LINUX_INTEL_SHA256/$LINUX_AMD64_SHA/" \
            -e "s/PLACEHOLDER_LINUX_ARM_SHA256/$LINUX_ARM64_SHA/" \
            Formula/ccmon.rb
          
          # Commit and push the updated formula
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/ccmon.rb
          git commit -m "chore: update Homebrew formula to $VERSION

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>"
          git push origin main
